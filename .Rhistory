params<-list("area_length_x"=areas[i],
"cell_count_x"=100,
"b"=0.3,
"d"=0,
"dd"=0.01,
"seed"=1234,
"init_density"=100/scales[i],
"death_kernel_x"=x_grid,
"death_kernel_y"=death_kernel*scales[i],
"birth_kernel_x"=x_grid,
"birth_kernel_y"=birth_kernel,
"spline_precision" = 1e-6
)
sim<-new(poisson_1d,params)
pop[[i]]<-numeric(100000)
for(j in 1:(100000)){
sim$make_event()
pop[[i]][j]=sim$total_population
}
print(paste(i,"done"))
}
final_pop<-pop%>%sapply(function(x){x%>%last()})
plot(final_pop)
pop[[1]]
plot(final_pop[1:5])
mean_pop<-pop%>%sapply(function(x){x%>%tail(500000)%>%mean()})
plot(mean_pop[1:5])
for(i in 1:length(scales)){
x_grid=(0:1000)/1000*0.002*scales[i]*10
death_kernel=dnorm(x_grid,sd=0.001*scales[i])
birth_kernel=dnorm(x_grid,sd=0.002*scales[i])
params<-list("area_length_x"=areas[i],
"cell_count_x"=100,
"b"=0.3,
"d"=0,
"dd"=0.01,
"seed"=1234,
"init_density"=100/scales[i],
"death_kernel_x"=x_grid,
"death_kernel_y"=death_kernel*scales[i],
"birth_kernel_x"=x_grid,
"birth_kernel_y"=birth_kernel,
"spline_precision" = 1e-6
)
sim<-new(poisson_1d,params)
pop[[i]]<-numeric(100000)
for(j in 1:(100000)){
sim$make_event()
pop[[i]][j]=sim$total_population
}
print(paste(i,"done"))
}
time_end<-Sys.time()
time_end-time_start
mean_pop<-pop%>%sapply(function(x){x%>%tail(50000)%>%mean()})
plot(mean_pop)
plot(pop[[1]])
plot(pop[[100]])
integrate(function(x){dnorm(x,sd=0.002*scales[1])},0,Inf)
integrate(function(x){dnorm(x,sd=0.002*scales[100])},0,Inf)
scales=10^(0:150/50)
areas=scales
pop<-list()
time_start<-Sys.time()
for(i in 1:length(scales)){
x_grid=(0:1000)/1000*0.002*scales[i]*10
death_kernel=dnorm(x_grid,sd=0.001*scales[i])
birth_kernel=dnorm(x_grid,sd=0.002*scales[i])
params<-list("area_length_x"=areas[i],
"cell_count_x"=100,
"b"=0.3,
"d"=0,
"dd"=0.01*scales[i],
"seed"=1234,
"init_density"=100/scales[i],
"death_kernel_x"=x_grid,
"death_kernel_y"=death_kernel,
"birth_kernel_x"=x_grid,
"birth_kernel_y"=birth_kernel,
"spline_precision" = 1e-6
)
sim<-new(poisson_1d,params)
pop[[i]]<-numeric(100000)
for(j in 1:(100000)){
sim$make_event()
pop[[i]][j]=sim$total_population
}
print(paste(i,"done"))
}
time_end<-Sys.time()
time_end-time_start
mean_pop<-pop%>%sapply(function(x){x%>%tail(50000)%>%mean()})
plot(mean_pop)
hist(mean_pop)
var(mean_pop)
mean(mean_pop)
ggplot(mean_pop,aes(x=scales,y=mean_pop))+geom_point()
p_load(ggplt)
p_load(ggplot)
p_load(ggplot)
install.packages(ggplot)
install.packages("ggplot")
p_load(ggplot2)
ggplot(mean_pop,aes(x=scales,y=mean_pop))+geom_point()
ggplot(aes(x=scales,y=mean_pop))+geom_point()
ggplot(data=data.frame(scales=scales,mean_pop=mean_pop)aes(x=scales,y=mean_pop))+geom_point()
ggplot(data=data.frame(scales=scales,mean_pop=mean_pop),aes(x=scales,y=mean_pop))+geom_point()
ggplot(data=data.frame(scales=scales,mean_pop=mean_pop),aes(x=scales,y=mean_pop))+geom_point()+scale_x_log10()
ggplot(data=data.frame(event=1:100000,pop=pop[[1]]),aes(x=event,y=pop))+geom_line()
i=1
death_kernel=dnorm(x_grid,sd=0.001*scales[i])
birth_kernel=dnorm(x_grid,sd=0.002*scales[i])
params<-list("area_length_x"=areas[i],
"cell_count_x"=100,
"b"=0.3,
"d"=0,
"dd"=0.01*scales[i],
"seed"=1234,
"init_density"=100/scales[i],
"death_kernel_x"=x_grid,
"death_kernel_y"=death_kernel,
"birth_kernel_x"=x_grid,
"birth_kernel_y"=birth_kernel,
"spline_precision" = 1e-6
)
sim<-new(poisson_1d,params)
pop[[i]]<-numeric(100000)
for(j in 1:(100000)){
sim$make_event()
}
sim$get_all_coordinates()
sim$get_all_coordinates()
sim$get_all_death_rates()
sim$total_population
sim$events
sim<-new(poisson_1d,params)
sim$events
sim$time
i=1
x_grid=(0:1000)/1000*0.002*scales[i]*10
death_kernel=dnorm(x_grid,sd=0.001*scales[i])
birth_kernel=dnorm(x_grid,sd=0.002*scales[i])
params<-list("area_length_x"=areas[i],
"cell_count_x"=100,
"b"=0.3,
"d"=0,
"dd"=0.01*scales[i],
"seed"=1234,
"init_density"=100/scales[i],
"death_kernel_x"=x_grid,
"death_kernel_y"=death_kernel,
"birth_kernel_x"=x_grid,
"birth_kernel_y"=birth_kernel,
"spline_precision" = 1e-6
)
sim<-new(poisson_1d,params)
sim$dd
for(j in 1:(100000)){
sim$make_event()
}
sim$get_all_coordinates()
hist(sim$get_all_coordinates())
hist(sim$get_all_coordinates(),bins=20)
ggplot(data=data.frame(coords=sim$get_all_coordinates()))+geom_density()
ggplot(data=data.frame(coords=sim$get_all_coordinates()),aes(coords))+geom_density()
ggplot(data=data.frame(coords=sim$get_all_coordinates()),aes(coords))+geom_hist()
ggplot(data=data.frame(coords=sim$get_all_coordinates()),aes(coords))+geom_histogram()
sim$get_all_coordinates()
100/%/1
100%/%3
i=1
death_kernel=dnorm(x_grid,sd=0.001*scales[i])
birth_kernel=dnorm(x_grid,sd=0.002*scales[i])
params<-list("area_length_x"=areas[i],
"cell_count_x"=100,
"b"=0.3,
"d"=0,
"dd"=0.01*scales[i],
"seed"=1234,
"init_density"=100/scales[i],
"death_kernel_x"=x_grid,
"death_kernel_y"=death_kernel,
"birth_kernel_x"=x_grid,
"birth_kernel_y"=birth_kernel,
"spline_precision" = 1e-6
)
sim<-new(poisson_1d,params)
all_coords<-list()
for(j in 1:(100000)){
sim$make_event()
if(j%%100==0) sim[[j%/%100]]<-sim$get_all_coordinates()
}
i=1
death_kernel=dnorm(x_grid,sd=0.001*scales[i])
birth_kernel=dnorm(x_grid,sd=0.002*scales[i])
params<-list("area_length_x"=areas[i],
"cell_count_x"=100,
"b"=0.3,
"d"=0,
"dd"=0.01*scales[i],
"seed"=1234,
"init_density"=100/scales[i],
"death_kernel_x"=x_grid,
"death_kernel_y"=death_kernel,
"birth_kernel_x"=x_grid,
"birth_kernel_y"=birth_kernel,
"spline_precision" = 1e-6
)
sim<-new(poisson_1d,params)
all_coords<-list()
for(j in 1:(100000)){
sim$make_event()
if(j%%100==0) all_coords[[j%/%100]]<-sim$get_all_coordinates()
}
death_kernel=dnorm(x_grid,sd=0.001*scales[i])
birth_kernel=dnorm(x_grid,sd=0.002*scales[i])
params<-list("area_length_x"=areas[i],
"cell_count_x"=100,
"b"=0.3,
"d"=0,
"dd"=0.01*scales[i],
"seed"=1234,
"init_density"=100/scales[i],
"death_kernel_x"=x_grid,
"death_kernel_y"=death_kernel,
"birth_kernel_x"=x_grid,
"birth_kernel_y"=birth_kernel,
"spline_precision" = 1e-6
)
sim<-new(poisson_1d,params)
all_coords<-list()
for(j in 1:(100000)){
sim$make_event()
if(j%%1000==0) all_coords[[j%/%1000]]<-sim$get_all_coordinates()
}
all_coords%>%sapply(c)
c(all_coords)
unlist(all_coords)
ggplot(data=data.frame(coords=c(all_coords%>%sapply(function(x){x/length(x)}))),aes(coords))+geom_histogram()
ggplot(data=data.frame(coords=unlist(all_coords%>%sapply(function(x){x/length(x)}))),aes(coords))+geom_histogram()
ggplot(data=data.frame(coords=unlist(all_coords),aes(coords))+geom_histogram()
ggplot(data=data.frame(coords=unlist(all_coords),aes(coords))+geom_histogram()
ggplot(data=data.frame(coords=unlist(all_coords),aes(coords)))+geom_histogram()
ggplot(data=data.frame(coords=unlist(all_coords)),aes(coords))+geom_histogram()
ggplot(data=data.frame(coords=unlist(all_coords)),aes(coords))+geom_histogram(bins=100)
ggplot(data=data.frame(coords=unlist(all_coords)),aes(coords))+geom_histogram(bins=60)
ggplot(data=data.frame(coords=unlist(all_coords)),aes(coords))+geom_histogram(bins=60,..density..)
ggplot(data=data.frame(coords=unlist(all_coords)),aes(coords))+geom_histogram(bins=60,aes(..density..))
ggplot(data=data.frame(coords=unlist(all_coords)),aes(coords))+geom_histogram(bins=60)
ggplot(data=data.frame(coords=unlist(all_coords)),aes(coords, ..density..))+geom_histogram(bins=60)
all_coords%>%last()
all_coords%>%tail(50)
sqrt(100)
numeric(1.2)
numeric(2.2)
scales=10^(0:100/50)
areas=scales
pop<-list()
time_start<-Sys.time()
for(i in 1:length(scales)){
x_grid=(0:1000)/1000*0.002*10
death_kernel=dnorm(x_grid,sd=0.001)
birth_kernel=dnorm(x_grid,sd=0.002)
params<-list("area_length_x"=areas[i],
"cell_count_x"=100,
"b"=0.3,
"d"=0,
"dd"=0.01,
"seed"=1234,
"init_density"=100,
"death_kernel_x"=x_grid,
"death_kernel_y"=death_kernel,
"birth_kernel_x"=x_grid,
"birth_kernel_y"=birth_kernel,
"spline_precision" = 1e-6
)
sim<-new(poisson_1d,params)
pop[[i]]<-numeric(100000*sqrt(scales[i]))
for(j in 1:(100000*sqrt(scales[i]))){
sim$make_event()
pop[[i]][j]=sim$total_population
}
print(paste(i,"done"))
}
time_end<-Sys.time()
time_end-time_start
sim$area_length_x
sim$total_population
mean_pop<-pop%>%sapply(function(x){x%>%tail(50000)%>%mean()})
plot(x=scales,y=mean_pop)
plot(x=scales,y=mean_pop/scales)
plot(x=1/scales,y=mean_pop/scales)
plot(x=scales,y=mean_pop/scales)
library(pracma)
p_load(pracme)
p_load(pracma)
rationalfit(scales,mean_pop/scales,d1=0,d2=1)
rationalfit(1:100,1/(1:100+1),d1=0,d2=1)
rationalfit(1:100,1/(1:100+2),d1=0,d2=1)
rationalfit(1:100,1/(1:100+3),d1=0,d2=1)
rationalfit(1:100,1/(1:100+1),d1=0,d2=1)
rationalfit(1:100,1/(1:100+1),d1=1,d2=1)
rationalfit(1:100,1/(1:100+5),d1=1,d2=1)
rationalfit(scales,mean_pop/scales,d1=0,d2=1)
rationalfit(scales,mean_pop/scales,d1=1,d2=1)
rationalfit(scales,mean_pop/scales,d1=0,d2=1)
plot(x=scales,y=mean_pop/scales)
rationalfit(mean_pop/scales,scales,d1=0,d2=1)
plot(x=scales,y=scales/mean_pop,d1=0,d2=1)
rationalfit(x=scales,y=scales/mean_pop,d1=0,d2=1)
warnings()
rationalfit(x=scales,y=scales/mean_pop,d1=0,d2=1)
rationalfit(x=scales,y=scales/mean_pop,d1=1,d2=1)
plot(x=scales,y=scales/mean_pop,d1=0,d2=1)
plot(x=scales,y=mean_pop/scales)
rationalfit(x=scales,y=scales/mean_pop,d1=1,d2=1)
rationalfit(scales,mean_pop/scales,d1=1,d2=1)
rationalfit(scales,mean_pop/scales,d1=5,d2=5)
rationalfit(scales,mean_pop/scales,d1=1,d2=1)
rationalfit(scales,mean_pop/scales,d1=2,d2=1)
rationalfit(scales,mean_pop/scales,d1=1,d2=1)
rationalfit(scales,mean_pop/scales,d1=0,d2=1)
rationalfit(scales,mean_pop/scales,d1=1,d2=0)
rationalfit(scales,mean_pop/scales,d1=1,d2=1)
rationalfit(scales,mean_pop/scales,d1=1,d2=0)
plot(x=scales,y=mean_pop/scales)
rationalfit(scales%>%tail(50),(mean_pop/scales)%>%tail(50),d1=1,d2=0)
rationalfit(scales%>%tail(20),(mean_pop/scales)%>%tail(20),d1=1,d2=0)
plot(x=scales,y=mean_pop)
lm(mean_pop~scales)
lm(mean_pop~scales -l)
lm(mean_pop~scales l)
lm(mean_pop~scales- 1)
lm(mean_pop~scales-1)
sim$get_all_coordinates()
p_load(spatstat)
sim$area_length_x
points<-ppp(sim$get_all_coordinates(),rep(0,sim$total_population),c(0,100),c(-50,50))
pcf(points)
points<-unique.ppp(sim$get_all_coordinates(),rep(0,sim$total_population),c(0,100),c(-50,50))
points<-unique.ppp(ppp(sim$get_all_coordinates(),rep(0,sim$total_population),c(0,100),c(-50,50)))
points$n
sim$total_population
pcf(points,r=x_grid[1:10],correction="Ripley")
pair_corr<-pcf(points,r=x_grid,correction="Ripley")
plot(x_grid,pair_corr$iso*pi*x_grid)
plot(x_grid,pair_corr$iso*pi)
plot(x_grid,pair_corr$iso*pi*x_grid)
plot(x_grid,pair_corr$iso*pi)
plot(x_grid,pair_corr$theo*pi)
plot(x_grid,pair_corr$theo*pi*x_grid)
plot(x_grid,pair_corr$iso*pi*x_grid)
plot(pair_corr)
sim$death_spline_at(-)
sim$death_spline_at(0)
sim$death_spline_at(0.0001)
X <- simdat
p <- pcf(X)
plot(p)
simdat$x
simdat$y
points$y
points$x
plot(pair_corr)
pair_corr$iso[1]
pair_corr$iso[2]
pair_corr$iso[3]
pair_corr$iso[4]
pair_corr$iso[4]*x_grid[4]
pair_corr$iso[3]*x_grid[3]
plot(pair_corr$theo*x_grid)
plot(x_grid,pair_corr$theo*x_grid)
pair_corr$theo*x_grid
pair_corr$theo
plot(x_grid,pair_corr$iso*x_grid)
pair_corr$iso*x_grid
K_estimate<-Kest(points,r=x_grid,correction="Ripley")
plot(K_estimate)
plot(K_estimate$iso)
density.ppp(points)
plot(density.ppp(points))
plot(K_estimate$iso)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+geom_line()
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+geom_line()+geom_smooth(method='lm',formula=Kest~x)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+geom_line()+geom_smooth(method='lm')
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='lm',formula = y~x-1)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='lm',formula = y~x)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='glm',formula = y~x-1)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smoggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='glm', method.args = list(family = "Gamma"),formula = y~x-1)oth(method='glm',formula = y~x-1)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='glm', method.args = list(family = "Gamma"),formula = y~x-1)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='glm', method.args = list(family = "Gamma"),formula = y~x)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='glm', method.args = list(family = "poisson"),formula = y~x)
warnings()
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='glm', method.args = list(family = "Gamma"),formula = y~x)
K_estimate$iso[1]
K_estimate$iso[2]
K_estimate$iso[3]
all(K_estimate$iso>0)
K_estimate[K_estimate$iso<0]
K_estimate$iso[K_estimate$iso<0]
K_estimate$iso[K_estimate$iso=0]
K_estimate$iso[K_estimate$iso==0]
K_estimate$iso
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='glm', method.args = list(family = "quasipoisson"),formula = y~x)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='glm', method.args = list(family = "inverse.gaussian"),formula = y~x)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='glm', method.args = list(family = "gamma"),formula = y~x)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+
geom_line()+geom_smooth(method='glm',formula = y~x)
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+geom_line()
K_estimate$iso%>%last()
ggplot(data=data.frame(Kest=K_estimate$iso,x=x_grid),aes(x=x,y=Kest))+geom_line()+
geom_line(data=data.frame(Kest=K_estimate$iso%>%last()/x_grid%>%last()*x_grid,x=x_grid))
ggplot(data=data.frame(Kest=K_estimate$iso/2,x=x_grid),aes(x=x,y=Kest))+geom_line()+
geom_line(data=data.frame(Kest=K_estimate$iso%>%last()/x_grid%>%last()*x_grid/2,x=x_grid))
coords<-data.frame(x=sim$get_all_coordinates)
coords<-data.frame(x=sim$get_all_coordinates())
distances<-coords%>%
mutate(X2=1)%>%
full_join(coords%>%mutate(X2=1), by = 'X2') %>%
select(-X2)%>%
mutate(dist=abs(X1.x-X1.y))%>%
filter(dist!=0.0)%>%
select(dist)
distances<-coords%>%
mutate(X2=1)%>%
full_join(coords%>%mutate(X2=1), by = 'X2') %>%
select(-X2)%>%
mutate(dist=abs(x.x-x.y))%>%
filter(dist!=0.0)%>%
select(dist)
pcf_estimate=data.frame(Kest=K_estimate$iso/2,x=x_grid)%>%
mutate(pfc=(Kest-lag(kest))*(x_grid-lag(x_grid)))
pcf_estimate=data.frame(Kest=K_estimate$iso/2,x=x_grid)%>%
mutate(pfc=(Kest-lag(Kest))*(x_grid-lag(x_grid)))
plot(x_grid,pcf_estimate$pfc)
sim$total_population/sim$area_length_x
dens<-sim$total_population/sim$area_length_x
plot(x_grid,pcf_estimate$pfc*dens*dens)
plot(x_grid,pcf_estimate$pfc*dens*dens*100)
plot(x_grid,pcf_estimate$pfc*dens*dens*1000)
plot(x_grid,pcf_estimate$pfc*dens*dens*area_length_x)
plot(x_grid,pcf_estimate$pfc*dens*dens*sim$area_length_x)
plot(x_grid,pcf_estimate$pfc*dens*dens*area_length_x)
plot(x_grid,pcf_estimate$pfc*dens*dens*1000)
plot(x_grid,pcf_estimate$pfc*dens*dens)
mean(pcf_estimate%>%tail(500))
mean(pcf_estimate$pfc%>%tail(500))
mean(pcf_estimate$pfc%>%tail(500))*dens*dens
mean(pcf_estimate$pfc%>%tail(500))*dens*dens*pi
mean(pcf_estimate$pfc%>%tail(500))*dens*dens
mean(pcf_estimate$pfc%>%tail(500))*dens*dens*dens
mean(pcf_estimate$pfc%>%tail(500))*dens*dens*dens*dens
mean(pcf_estimate$pfc%>%tail(500))
mean(pcf_estimate$pfc%>%tail(500))*dens*dens
mean(pcf_estimate$pfc%>%tail(500))*sim$total_population
mean(pcf_estimate$pfc%>%tail(500))*sim$total_population*sim$total_population
mean(pcf_estimate$pfc%>%tail(500))*sim$total_population*dens*dens
mean(pcf_estimate$pfc%>%tail(500))*dens*dens
plot(x_grid,pcf_estimate$pfc/mean(pcf_estimate$pfc%>%tail(500)))
plot(points)
ggplot(data=data.frame(Kest=K_estimate$iso/2,x=x_grid),aes(x=x,y=Kest))+geom_line()
ggplot(data=pcf_estimate,aes(x=x,y=pcf))+geom_point()
ggplot(data=pcf_estimate,aes(x=x,y=pcf))+geom_line()
ggplot(data=pcf_estimate,aes(x=x,y=.pcf))+geom_point()
ggplot(data=pcf_estimate,aes(x=x,y=$.pcf))+geom_point()
ggplot(data=pcf_estimate,aes(x=x,y=.pcf))+geom_point()
ggplot(data=pcf_estimate,aes(x=x,y=.pfc))+geom_point()
ggplot(data=pcf_estimate,aes(x=x,y=pfc))+geom_point()
ggplot(data=pcf_estimate,aes(x=x,y=pfc))+geom_line()
ggplot(data=pcf_estimate,aes(x=x,y=pfc/mean(pcf_estimate$pfc%>%tail(500)))+geom_line()
)))
ggplot(data=pcf_estimate,aes(x=x,y=pfc/mean(pcf_estimate$pfc%>%tail(500))))+geom_line()
ggplot(data=pcf_estimate,aes(x=x,y=pfc/mean(pcf_estimate$pfc%>%tail(500))))+geom_line()+
labs(x="r",y="PCF")
pcf_estimate=data.frame(Kest=K_estimate$iso/2,x=x_grid)%>%
mutate(pfc=(Kest-lag(Kest))/(x_grid-lag(x_grid))*dens*dens)
ggplot(data=pcf_estimate,aes(x=x,y=pfc))+geom_line()+
labs(x="r",y="PCF")
pcf_estimate=data.frame(Kest=K_estimate$iso/2,x=x_grid)%>%
mutate(pfc=(Kest-lag(Kest))/(x_grid-lag(x_grid)))
ggplot(data=pcf_estimate,aes(x=x,y=pfc))+geom_line()+
labs(x="r",y="PCF")
mean(pcf_estimate$pfc%>%tail(500)
)
mean(pcf_estimate$pfc%>%tail(700)
)
dens
pcf_estimate=data.frame(Kest=K_estimate$iso/2,x=x_grid)%>%
mutate(pfc=(Kest-lag(Kest))/(x_grid-lag(x_grid))*dens/areas[1])
ggplot(data=pcf_estimate,aes(x=x,y=pfc))+geom_line()+
labs(x="r",y="PCF")
pcf_estimate=data.frame(Kest=K_estimate$iso/2,x=x_grid)%>%
mutate(pfc=(Kest-lag(Kest))/(x_grid-lag(x_grid))*dens/sim$area_length_x)
ggplot(data=pcf_estimate,aes(x=x,y=pfc))+geom_line()+
labs(x="r",y="PCF")
pcf_estimate=data.frame(Kest=K_estimate$iso/2,x=x_grid)%>%
mutate(pfc=(Kest-lag(Kest))/(x_grid-lag(x_grid))/sim$area_length_x)
ggplot(data=pcf_estimate,aes(x=x,y=pfc))+geom_line()+
labs(x="r",y="PCF")
0:150/50
