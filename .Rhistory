rcpp_hello_world()
library(MathBioSim)
if (!require("pacman")) {
install.packages("pacman")
require("pacman")}
p_load(devtools)
load_all('D:.Rstuff/mathbio/MathBioSim/')
load_all('D:/Rstuff/mathbio/MathBioSim/')
load_all()
library(MathBioSim)
rcpp_hello_world()
p_load(BH)
load_all()
load_all()
library(MathBioSim)
MathBioSim::computeGCD(15,3)
MathBioSim::computeGCD(60,35)
MathBioSim::computeGCD(60,40)
MathBioSim::rcpp_hello_world()
MathBioSim::rcpp_hello_world()
MathBioSim::computeGCD(60,40)
load_all()
load_all()
load_all()
fx_unif <- cxxfunction(...)
load_all()
load_all()
load_all()
MathBioSim::`_rcpp_module_boot_storage_1d_module`
Module("storage_1d")
Module("storage_1d")
Module("storage_1d",package=MathBioSim)
p_load(Rcpp)
Module("storage_1d",package=MathBioSim)
Module("storage_1d")
Module("storage_1d")$
storage_1d
getdynlib()
getDynLib
Module("storage_1d_module")
MathBioSim::`_rcpp_module_boot_storage_1d_module`
Module("storage_1d_module",MathBioSim::`_rcpp_module_boot_storage_1d_module`)
Rcpp.package.skeleton( "MathBioSim", module=TRUE )
Module("storage_1d_module")
Module("storage_1d_module","MathBioSim")
MathBioSim::`_rcpp_module_boot_storage_1d_module`
storage_1d
Module("storage_1d_moduel")
Module("storage_1d_module")
useDynLib(MathBioSim)
require(MathBioSim)
MathBioSim::storage_1d
load_all()
MathBioSim::`_rcpp_module_boot_storage_1d_module`
require(MathBioSim)
load_all()
Module("storage_1d",package=MathBioSim)
Module("storage_1d",MathBioSim)
Module("storage_1d")
Module("storage_1d_module")
require(Rcpp)
require(devtools)
require(pacman)
load_all()
new(storage_1d,c(1,2,3),c(2,3,4,5,6))
obj<-new(storage_1d,c(1,2,3),c(2,3,4,5,6))
obj$area_length
obj$points
load_all()
